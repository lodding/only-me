server:
  port: ${SERVER_PORT:8444}
  servlet:
    context-path: /admin

spring:
  application:
    name: admin-service

  #数据库链接
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:${DATASOURCE_DBTYPE:mysql}://${ATASOURCE_HOST:localhost}:${DATASOURCE_PORT:3306}/${DATASOURCE:only-admin}?characterEncoding=utf8&useSSL=false&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false&serverTimezone=Asia/Shanghai
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:qwas1234}
    #password: ${DATASOURCE_PASSWORD:szh1234mysql}

  #redis
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0
    timeout: 1000ms

    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0


  #mq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    #这个配置是保证提供者确保消息推送到交换机中，不管成不成功，都会回调
    publisher-confirm-type: correlated
    #保证交换机能把消息推送到队列中
    publisher-returns: true
    virtual-host: /
    #这个配置是保证消费者会消费消息，手动确认
    listener:
      simple:
        acknowledge-mode: manual
    template:
      mandatory: true


# mybatis #  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
mybatis-plus:
  mapper-locations: classpath*:com.me.only.repository.mapper/*Mapper.xml

  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.me.only.repository.entity

logging:
  level:
    com.me.only.repository.mapper: DEBUG
